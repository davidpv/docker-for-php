networks:
  stack:
    driver: bridge

volumes:
  db_data:

services:

  nginx:
    build:
      context: ./docker/nginx
    ports:
      - 80:80
    volumes:
      - ./project:/var/www/html:delegated
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:delegated
    depends_on:
      php:
        condition: service_started
    networks:
      - stack

  php:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
      target: php
      args:
        - SYMFONY_VERSION=7.0
    volumes:
      - ./project:/var/www/html
      - ./project/var:/var/www/html/var:delegated
      - ./project/cache:/var/www/html/cache:delegated
      - ./project/vendor:/var/www/html/vendor:cache
    depends_on:
      db:
        condition: service_started
    networks:
      - stack

  db:
    image: mysql:8.0
    volumes:
      - db_data:/var/lib/mysql
      - ./docker/db/my.custom.cnf:/etc/mysql/conf.d/my.custom.cnf:ro
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: app
      MYSQL_USER: db
      MYSQL_PASSWORD: db
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost", "-proot" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - stack

  adminer:
    image: adminer
    ports:
      - "8081:8080"
    depends_on:
      db:
        condition: service_started
    networks:
      - stack

  mailhog:
    platform: linux/amd64
    image: mailhog/mailhog
    ports:
      - "8025:8025" #web
      - "1025:1025" #smtp
    networks:
      - stack

  node:
    image: node:alpine3.19
    volumes:
      - ./docker/node/script.js:/script.js
    network_mode: "none"
    entrypoint: ["node", "script.js"]